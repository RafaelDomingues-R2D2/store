generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    String     @id @default(uuid())
  name  String
  email String  @unique
  password String

  Orders Order[]

  createdAt DateTime @default(now())

  @@map("users")
}

model Characteristic {
  id String @id @default(uuid())
  name String
  description String
  productId String @map("product_id")

  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())

  @@map("characteristics")
}

model Image {
  id String @id @default(uuid())
  url String
  description String
  productId String @map("product_id")

  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())

  @@map("images")
}

model Product {
  id    String     @id @default(uuid())
  name  String
  value Float  
  availableQuantity Int @map("available_quantity")
  description String
  category String

  Characteristics Characteristic[]
  Images Image[] 
  OrderItems OrderItems[]

  createdAt DateTime @default(now()) @map("created_at")

  @@map("products")
}

enum OrderStatus {
  PROCESSING
  PROCESSED
  CANCELED
}

model Order {
  id    String     @id @default(uuid())
  totalValue  Float @map("total_value")
  status OrderStatus @default(PROCESSING)
  userId String @map("user_id")

  user User @relation(fields: [userId], references: [id])

  OrderItems OrderItems[]

  createdAt DateTime @default(now())

  @@map("orders")
}

model OrderItems {
  id    String     @id @default(uuid())
  orderId  String @map("order_id")
  productId String @map("product_id")
  quantity Int
  sellValue Float

  order Order @relation(fields: [orderId], references: [id])
  product Product @relation(fields: [productId], references: [id])


  createdAt DateTime @default(now())

  @@map("order_items")
}

